# Global options
build -c opt \
      --incompatible_enable_cc_toolchain_resolution \
      --incompatible_require_linker_input_cc_api

# Aliases for user-defined flags
build --flag_alias=test_link_mode=@config//:test_link_mode
build --flag_alias=test_thread_mode=@config//:test_thread_mode
build --flag_alias=release_dpc=@config//:release_dpc
build --flag_alias=cpu=@config//:cpu

# Always pass this env variable to test rules, because SYCL
# OpenCL backend uses it to determine available devices
test --test_env=OCL_ICD_FILENAMES

# Configuration: 'host'
# Build & run all host tests
build:host \
    --build_tag_filters="host"

test:host \
    --test_tag_filters="host"


# Configuration: host-public
# Build & run all host tests for public interface
build:host-public \
    --build_tag_filters="host,-private"

test:host-public \
    --test_tag_filters="host,-private"


# Configuration: 'dpc-cpu'
# Build & run all DPC++ tests on CPU
build:dpc-cpu \
    --build_tag_filters="dpc"

run:dpc-cpu \
    -- --device=cpu

test:dpc-cpu \
    --test_tag_filters="dpc" \
    --test_arg="--device=cpu"


# Configuration: 'dpc-cpu-public'
# Build & run all DPC++ tests on CPU for public interface
build:dpc-cpu-public \
    --build_tag_filters="dpc,-private"

run:dpc-cpu-public \
    -- --device=cpu

test:dpc-cpu-public \
    --test_tag_filters="dpc,-private" \
    --test_arg="--device=cpu"


# Configuration: 'dpc-gpu'
# Build & run all DPC++ tests on GPU
build:dpc-gpu \
    --build_tag_filters="dpc"

run:dpc-gpu \
    -- --device=gpu

test:dpc-gpu \
    --test_tag_filters="dpc" \
    --test_arg="--device=gpu"


# Configuration: 'dpc-gpu-public'
# Build & run all DPC++ tests on GPU for public interface
build:dpc-gpu-public \
    --build_tag_filters="dpc,-private"

run:dpc-gpu-public \
    -- --device=gpu

test:dpc-gpu-public \
    --test_tag_filters="dpc,-private" \
    --test_arg="--device=gpu"
