/*******************************************************************************
* Copyright 2014-2019 Intel Corporation
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

/* for a given class and result type, replaces 3 member functions
   "compute", "finalizeCompute" and "get$G"
   with single function run() returning G. */

%define %addrun(T,R)
%extend T {
    daal::services::SharedPtr<R> compute()
        {
            $self->compute();
            return $self->get##R();
        }
 }
%enddef

%define %addrun_t(T,R,TT...)
%extend T<TT> {
    daal::services::SharedPtr<R> run()
        {
            $self->compute();
            return $self->get##R();
        }
 }
%enddef

%define %addrun_f(T,R)
%extend T {
    daal::services::SharedPtr<R> run()
        {
            $self->compute();
            $self->finalizeCompute();
            return $self->get##R();
        }
 }
%enddef

%define %doctemplate(FT, T, TA...)
%feature("docstring") T<TA> "Instantiation of @ref " #T
%template(FT) T<TA>;
%enddef
