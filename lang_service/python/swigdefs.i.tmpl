/*******************************************************************************
* Copyright 2014-2019 Intel Corporation.
*
* This software and the related documents are Intel copyrighted  materials,  and
* your use of  them is  governed by the  express license  under which  they were
* provided to you (License).  Unless the License provides otherwise, you may not
* use, modify, copy, publish, distribute,  disclose or transmit this software or
* the related documents without Intel's prior written permission.
*
* This software and the related documents  are provided as  is,  with no express
* or implied  warranties,  other  than those  that are  expressly stated  in the
* License.
*******************************************************************************/

/* for a given class and result type, replaces 3 member functions
   "compute", "finalizeCompute" and "get$G"
   with single function run() returning G. */

%define %addrun(T,R)
%extend T {
    daal::services::SharedPtr<R> compute()
        {
            $self->compute();
            return $self->get##R();
        }
 }
%enddef

%define %addrun_t(T,R,TT...)
%extend T<TT> {
    daal::services::SharedPtr<R> run()
        {
            $self->compute();
            return $self->get##R();
        }
 }
%enddef

%define %addrun_f(T,R)
%extend T {
    daal::services::SharedPtr<R> run()
        {
            $self->compute();
            $self->finalizeCompute();
            return $self->get##R();
        }
 }
%enddef

%define %doctemplate(FT, T, TA...)
%feature("docstring") T<TA> "Instantiation of @ref " #T
%template(FT) T<TA>;
%enddef
